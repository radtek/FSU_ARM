/*
 * AlarmHdl.cpp
 *
 *  Created on: 2016-6-14
 *      Author: vmuser
 */

#include <string.h>
#include <unistd.h>
#include "AlarmHdl.h"
//#include "HW.h"
#include "Pipe.h"
#include "Message.h"
#include "Device.h"
#include "soap.h"
#include "DB.h"


extern DeviceManager DevMgr;
extern DBHdl DB;

//void AlarmLink(bool openDoor, bool doorOpen) {
//	DevMgr.DO_LightCtrl(doorOpen);
//	if (openDoor)
//		notifyCamera();
//}

//void * almReportProc(void *) {
//	vector <BInt::stAlarmDB>  alarms;
//	while (1) {
//		DevMgr.DI_CheckLoop();
//		DevMgr.chkAndFilterAlarm();
//		alarms.clear();
//		DevMgr.getReportAlms(alarms);
////		if (alarms.size() > 0) {
////			DB.saveNewAlarmToUnConfirmedDB(alarms);
////		}
//		sleep(1);
//	}
//	return (void *) 0;
//}
//	属性				设备			信号类型								市电停电
const char* ids_mains_off_dev[3] = {
/*告警间关联过滤 	智能电表 	交流输入停电告警			*/"16001001",//输出1条市电停电告警
/* 				交流配电箱  	交流输入停电告警		*/"02016001",
/*				开关电源 	交流输入 XX 停电告警		*/"06016001"
};
const char* ids_mains_off_filter[19] = {
/*非关联过滤		交流配电箱	交流电压过低告警 			*/"02003001",	//过滤
/*							交流缺相告警				*/"02004001",	//过滤
/*				开关电源		电池供电告警				*/"06005001",	//过滤
/*							交流输入 XX 电压过低告警	*/"06015001",	//过滤
/*							交流输入 XX 缺相告警		*/"06017001",	//过滤
/*							交流输入 XX 频率过低告警	*/"06019001",	//过滤
/*							整流模块 XX 故障告警		*/"06024001",	//过滤
/*							整流模块 XX 风扇告警		*/"06025001",	//过滤
/*							整流模块 XX 通信状态告警	*/"06028001",	//过滤
/*							其他告警 					*/"06029001",	//过滤
/*				普通空调		交流输入异常告警			*/"15003001",	//过滤
/*				智能电表		交流电压过低告警			*/"16003001",	//过滤
/*							交流缺相告警				*/"16004001",	//过滤
/*							第1路（市电）电压过低告警	*/"16005001",	//过滤
/*				监控设备		普通空调通信状态告警		*/"19008001",	//过滤
/*							通风/换热设备通信状态告警	*/"19009001",	//过滤
/*							智能电表通信中断告警		*/"19012001",	//过滤
/*				蓄电池温控柜	交流欠压告警				*/"27008001",	//过滤
/*							交流停电告警				*/"27011001"	//过滤
/*				其他			其他交流供电设备停电或通信中断告警*/   		//过滤
};
const char* ids_spa_off_filter[8] = {
/*				开关电源		电池供电告警				*/"06005001",	//过滤
/*							交流输入 XX 电压过低告警	*/"06015001",	//过滤
/*							交流输入 XX 缺相告警		*/"06017001",	//过滤
/*							交流输入 XX 频率过低告警	*/"06019001",	//过滤
/*							整流模块 XX 故障告警		*/"06024001",	//过滤
/*							整流模块 XX 风扇告警		*/"06025001",	//过滤
/*							整流模块 XX 通信状态告警	*/"06028001",	//过滤
/*							其他告警 					*/"06029001",	//过滤
};
//-----------------------------------------------------------------------------------------------------------
//设备 			信号类型									交流电压过高			交流电压过低		交流电压缺相
const char * ids_mains_high_filter[4] = {// 下表顺序固定！
/*智能电表 		交流电压过高告警 			*/"16002001",
/*				交流电压超高告警			*/"02002001",
/*交流配电箱 	交流电压过高告警				*/"02001001",	//只上报一条告警注	—— 				——
/*开关电源		交流输入 XX 电压过高告警	*/"06014001"
//其他交流设备 	交流电压过高告警
};
const char * ids_mains_low_filter[3] = {
/*智能电表 		交流电压过低告警 			*/"16003001",
/*交流配电箱		交流电压过低告警			*/"02003001",	//——				只上报一条告警	——
/*开关电源		交流输入 XX 电压过低告警	*/"06015001"
//其他交流设备	交流电压过低告警
};
const char * ids_phase_off_filter[3] = {
/*智能电表		交流缺相告警				*/"16004001",
/*交流配电箱 	交流缺相告警 					*/"02004001",	//——				——				只上报一条告警
/*开关电源 		交流输入 XX 缺项告警 		*/"06017001"
//其他交流设备
};
const char * ids_mains_fail_filter[4] = {
/*开关电源		整流模块 XX 故障告警		*/"06024001",	//过滤				过滤				过滤
/*				整流模块 XX 风扇告警		*/"06025001",	//过滤				过滤				过滤
/*				整流模块 XX 过压关机告警 	*/"06026001",	//过滤				过滤				过滤
/*				整流模块 XX 通信状态告警	*/"06028001"	//过滤				过滤				过滤
};
